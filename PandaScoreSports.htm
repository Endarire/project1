<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <title>Get PandaScore eSports Data!</title>
  <style type="text/css">
    button,
    div,
    form,
    input
    {
      margin: 10px;
    }
  </style>
</head>

<body>
  <div class="container">
    <h1>Get PandaScore eSports Data!</h1>

    <!-- gifs will Get Dumped Here -->
    <div id="LOL-data-view"></div>

    <!-- Rendered Buttons will get Dumped Here  -->
    <div id="buttons-view"></div>

    <form id="gif-form">
      <label for="LOL-input">Get PandaScore eSports Data!</label>
      <input type="text" id="LOL-input">
      <br>

      <!-- Button triggers new gif to be added -->
      <input id="add-LOL-data" type="submit" value="Add a topic to search!">
    </form>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script type="text/javascript">
      // Initial array of topics to search
      //LOL TEAM INFOS INCLUDING LOGOS: /lol/tournaments
      var topicsRay = ["ow/tournaments", "lol/tournaments", "/dota2/leagues", "/dota2/tournaments", "/dota2/teams", "/dota2/players", "lol/series", "lol/leagues", "lol/matches", "lol/masteries", "lol/teams"/*, "lol/champions",*/ /*"lol/items"*/]; //commented topics are likely unimportant for this project

      // displayLOLInfo function re-renders the HTML to display the appropriate content
      function displayLOLInfo()
      {
        var searchTerm = $(this).attr("LOL-search-term");
        let queryURL = "https://cors.io/?https://api.pandascore.co/" + searchTerm + ".json?token=45Y1oJ2gHMQDAL-KuPfNsuypkLd360qcCP7uDf0djuwGmcVByRw";
        
        $.ajax
        ({
        url: queryURL,
        method: "GET"
        })
        // After data comes back from the request
        .then(function(response)
        {
          console.log("QUERY URL: " + queryURL);
          console.log("STRING RESPONSE: ", response);
          response = JSON.parse(response); //Needed to make the data an object instead of a string!
          console.log("OBJECT RESPONSE: ", response);
          
          // storing the data from the AJAX request in the results variable
          var results = response.data; //Useful?

          //LOL Teams
          let SamsungGalaxy = {};
          let SKTelecom = {};

          //DOTA 2 Teams
          let OG ={};
          let PSGLGD = {};

          //Overwatch Teams
          let TeamCanada = {};
          let TeamSouthKorea = {};

          //console.log("SamsungGalaxyLogoURL: " + SamsungGalaxyLogoURL);
          
          //response[a].teams[b].image_url
          //SK Telecom 1 Image URL: https://cdn.pandascore.co/images/team/image/100/sktelecom-t1-3mpugoym.png

          for(let a = 0; a < response.length; a++)
          {
            console.log("response[a]: ", response[a]);

            //LOL Data
            if(response[a].teams !== null) //Check if the field exists!
            {
              for(let b = 0; b < response[a].teams.length; b++)
              {
                console.log("response[a].teams[b]", response[a].teams[b]);
                
                //DOTA 2 Teams
                if(response[a].teams[b].name.toUpperCase() === "OG".toUpperCase())
                {
                  OG.name = response[a].teams[b].name;
                  OG.acronym = response[a].teams[b].acronym;
                  OG.image_url = response[a].teams[b].image_url;
                  console.log("OG: ", OG);
                }

                if(response[a].teams[b].name.toUpperCase() === "PSG.LGD".toUpperCase() || response[a].teams[b].name.toUpperCase() === "PSG LGD".toUpperCase())
                {
                  PSGLGD.name = response[a].teams[b].name;
                  PSGLGD.acronym = response[a].teams[b].acronym;
                  PSGLGD.image_url = response[a].teams[b].image_url;
                  console.log("PSGLGD: ", PSGLGD);
                }

                //LOL Teams
                if(response[a].teams[b].name.toUpperCase() === "Samsung Galaxy".toUpperCase())
                {
                  SamsungGalaxy.name = response[a].teams[b].name;
                  SamsungGalaxy.acronym = response[a].teams[b].acronym;
                  SamsungGalaxy.image_url = response[a].teams[b].image_url;
                  console.log("SAMSUNG GALAXY: ", SamsungGalaxy);
                }

                if(response[a].teams[b].name.toUpperCase() === "SK telecom T1".toUpperCase())
                {
                  SKTelecom.name = response[a].teams[b].name;
                  SKTelecom.acronym = response[a].teams[b].acronym;
                  SKTelecom.image_url = response[a].teams[b].image_url;
                  console.log("SK TELECOM T1: ", SKTelecom);
                }

                //Overwatch Teams
                if(response[a].teams[b].name.toUpperCase() === "South_Korea".toUpperCase() || response[a].teams[b].name.toUpperCase() === "South Korea".toUpperCase())
                {
                  TeamSouthKorea.name = response[a].teams[b].name;
                  TeamSouthKorea.acronym = response[a].teams[b].acronym;
                  TeamSouthKorea.image_url = response[a].teams[b].image_url;
                  console.log("Team South Korea: ", TeamSouthKorea);
                }

                if(response[a].teams[b].name.toUpperCase() === "Canada".toUpperCase())
                {
                  TeamCanada.name = response[a].teams[b].name;
                  TeamCanada.acronym = response[a].teams[b].acronym;
                  TeamCanada.image_url = response[a].teams[b].image_url;
                  console.log("Team Canada: ", TeamCanada);
                }
              }
            }
          }

          // Looping through each result item
          for (var a = 0; a < results.length; a++)
          {
            // Creating and storing a div tag
            var LOLDiv = $("<div>");

            // Creating a paragraph tag with the result item's rating
            var p = $("<p>").text("Adultness Rating: " + results[a].rating);

            // Creating and storing an image tag
            var gifImage = $("<img>");
            let stillImage = $("<img>");

            // Setting the src attribute of the image to a property pulled off the result item
            //This gets the animated and still GIF versions.

            document.createAttribute("animated-url");
            document.createAttribute("data-state");
            document.createAttribute("class");
            document.createAttribute("still-url");
            
            gifImage.attr("src", results[a].images.fixed_height.url);
            stillImage.attr("src", results[a].images.fixed_height_still.url);

            gifImage.attr("animated-url", results[a].images.fixed_height.url);
            gifImage.attr("still-url", results[a].images.fixed_height_still.url);
            gifImage.attr("data-state", "animated");
            gifImage.attr("class", "gif");

            stillImage.attr("animated-url", results[a].images.fixed_height.url);
            stillImage.attr("still-url", results[a].images.fixed_height_still.url);
            stillImage.attr("data-state", "still");
            stillImage.attr("class", "gif");

            //console.log("stillImage.attr(data-state) " + stillImage.attr("data-state"));
            //console.log("gifImage.attr(data-state) " + gifImage.attr("data-state"));

            // Appending the paragraph and image tag to the LOLDiv
            LOLDiv.append(p);
            LOLDiv.append(stillImage); //Show still images by default!
            //LOLDiv.append(gifImage);
            
            // Prependng the LOLDiv to the HTML page in the "#gifs-appear-here" div
            $("#LOL-data-view").prepend(LOLDiv);
          }
        });
      }

      
      //If the document is clicked, and the area on the document clicked is a member of class gif,
      //run the function!
      $(document).on("click", ".gif", function(event) 
      {
        //event.preventDefault();
        console.log("On image click function triggered!");
        // The attr jQuery method allows us to get or set the value of any attribute on our HTML element
        let state = $(this).attr("data-state");
        
        console.log("State: " + state);
        // If the clicked image's state is still, update its src attribute to what its data-animate value is.
        // Then, set the image's data-state to animate
        // Else set src to the data-still value
        if (state === "still")
        {
          $(this).attr("src", $(this).attr("animated-url"));
          $(this).attr("data-state", "animated");
        }
        else
        {
          $(this).attr("src", $(this).attr("still-url"));
          $(this).attr("data-state", "still");
        }
    });

      // Function for displaying gif data
      function renderButtons()
      { // Deleting the gifs prior to adding new gifs
        // (this is necessary otherwise you will have repeat buttons)
        $("#buttons-view").empty();

        // Looping through the array of gifs
        for (var d = 0; d < topicsRay.length; d++)
        { // Then dynamicaly generating buttons for each gif in the array
          // This code $("<button>") is all jQuery needs to create the beginning and end tag. (<button></button>)
          var a = $("<button>");
          // Adding a class of LOL-data-btn to our button
          a.addClass("LOL-data-btn");
          // Adding a data-attribute
          a.attr("LOL-search-term", topicsRay[d]);
          // Providing the initial button text
          a.text(topicsRay[d]);
          // Adding the button to the buttons-view div
          $("#buttons-view").append(a);
        }
      }

      // This function handles events where a gif button is clicked
      $("#add-LOL-data").on("click", function(event)
      {
        event.preventDefault();
        // This line grabs the input from the textbox
        var LOLSearchResult = $("#LOL-input").val().trim();

        // Adding gif from the textbox to our array
        topicsRay.push(LOLSearchResult);

        // Calling renderButtons which handles the processing of our gif array
        renderButtons();
      });

      // Adding a click event listener to all elements with a class of "LOL-data-btn"
      $(document).on("click", ".LOL-data-btn", displayLOLInfo);

      // Calling the renderButtons function to display the intial buttons
      renderButtons();
    </script>
  </div>
</body>
</html>